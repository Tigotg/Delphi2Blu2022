unit UfrmProceduresFunctions;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, DateUtils;

type
  TfrmProceduresFunctions = class(TForm)
    btnProcedure: TButton;
    btnFunction: TButton;
    btnParametrosReferencia: TButton;
    btnConstante: TButton;
    btnArrayAberto: TButton;
    btnArrayAbertoVariante: TButton;
    btnFormat: TButton;
    btnTiposData: TButton;
    btnSobreCargaFuncoes: TButton;
    btnParametrosDefault: TButton;
    procedure btnProcedureClick(Sender: TObject);
    procedure btnFunctionClick(Sender: TObject);
    procedure btnParametrosReferenciaClick(Sender: TObject);
    procedure btnConstanteClick(Sender: TObject);
    procedure btnArrayAbertoClick(Sender: TObject);
    procedure btnArrayAbertoVarianteClick(Sender: TObject);
    procedure btnFormatClick(Sender: TObject);
    procedure btnTiposDataClick(Sender: TObject);
    procedure btnSobreCargaFuncoesClick(Sender: TObject);
    procedure btnParametrosDefaultClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmProceduresFunctions: TfrmProceduresFunctions;

implementation

{$R *.dfm}

/////PROCEDURES E FUNCTIONS/////

//Isso é uma Procedure

procedure OlaMundo;
begin
  ShowMessage('Olá Mundo !!!');
end;

//Isso é uma Função
function RetornarNomeSobrenome: String;
begin
  Result := 'Tiago Anacleto';
end;

//Procedure com parametros por referencia
procedure DoubleTheValue(var Value: Integer);
begin
  Value := Value * 2;
end;

//Parametros Constantes
function DoubleTheValue2(const Value: Integer): Integer;
begin
  //Value := Value *2; //Compiler error
  Result := Value;
end;

//Parametro com Array aberto
function Sum(const A: Array of Integer): Integer;
var
  I: Integer;
begin
  Result := 0;

  for I := Low(A) to High(A) do
    Result := Result + A[I];
end;

//Parâmetros Default
procedure NewMessage(aMsg: String; aCaption: String = 'Message';
                     aSeparador: String = SLineBreak);
var
  xMensagem: String;
begin
  xMensagem := aCaption;
  xMensagem := xMensagem + ': ';
  xMensagem := xMensagem + aMsg;
  xMensagem := xMensagem + aSeparador;

  ShowMessage(xMensagem);
end;


//Sobre Carga de Funções
function Min(A, B: Integer): Integer; Overload;
 begin
   Result := A;
   if B < A then
   Result := B;
 end;

// function Max(A, B: Integer): Integer; Overload;
// begin
//   Result := A;
//   if B > A then
//   Result := B;
// end;


function Min(A, B: Double): Double; Overload;
 begin
   Result := A;
   if B < A then
   Result := B;
 end;

 function Min(A, B: Extended): Extended; Overload;
 begin
   Result := A;
   if B < A then
   Result := B;
 end;

procedure TfrmProceduresFunctions.btnArrayAbertoClick(Sender: TObject);
var
  xSoma: Integer;
begin  xSoma := Sum([1,2,3]);

  ShowMessage(xSoma.ToString);
end;

procedure TfrmProceduresFunctions.btnArrayAbertoVarianteClick(Sender: TObject);
var
  xNum1: Integer;
  xNum2: Double;
begin
  xNum1 := 20;
  xNum2 := 1500.50;

  ShowMessage(
    Format('Total do caixa é de: %d', [xNum1])); //%d de Decimal

  ShowMessage(
    Format('Olá %s:, Money: %f', ['Tiago', xNum2])); //%s de String
end;                                                 //%f de Float

procedure TfrmProceduresFunctions.btnConstanteClick(Sender: TObject);
var
  x: Integer;
begin
  x:= 10;
  DoubleTheValue2(x);
  ShowMessage(x.ToString);
end;

procedure TfrmProceduresFunctions.btnFormatClick(Sender: TObject);
var
  text: String;
begin
  ShowMessage(Format('%s', ['Hello!']));

  ShowMessage(Format('String = %s', ['Hello!']));
  ShowMessage('');

  ShowMessage(Format('Decimal           = %d', [-123]));
  ShowMessage(Format('Exponente         = %e', [12345.678]));
  ShowMessage(Format('Fixed             = %f', [12345.678]));
  ShowMessage(Format('General           = %g', [12345.678]));
  ShowMessage(Format('Number            = %n', [12345.678]));
  ShowMessage(Format('Money             = %m', [12345.678]));
  ShowMessage(Format('Pointer           = %p', [addr(text)]));
  ShowMessage(Format('String            = %s', ['Hello']));
  ShowMessage(Format('Unsigned decimal  = %u', [123]));
  ShowMessage(Format('Hexadecimal       = %x', [140]));
end;

procedure TfrmProceduresFunctions.btnFunctionClick(Sender: TObject);
var
  xNomeSobreNome: String;
begin
  xNomeSobreNome := RetornarNomeSobrenome;
  ShowMessage(xNomeSobreNome);
end;

procedure TfrmProceduresFunctions.btnParametrosDefaultClick(Sender: TObject);
begin
  NewMessage('Something wrong here!');
  NewMessage('Something wrong here!', 'Attention');
  NewMessage('Hello', 'Message', '---');
end;

procedure TfrmProceduresFunctions.btnParametrosReferenciaClick(Sender: TObject);
var
  x: Integer;
begin
  x := 10;
  DoubleTheValue(x);
  ShowMessage(x.ToString);
end;

procedure TfrmProceduresFunctions.btnProcedureClick(Sender: TObject);
begin
  OlaMundo;
end;

procedure TfrmProceduresFunctions.btnSobreCargaFuncoesClick(Sender: TObject);
var
  xNum1, xNum2: Integer;
  xNum3, xNum4: Double;
  xNum5, xNum6: Extended;
begin
  xNum1 := 1; xNum2 := 2;
  xNum3 := 1; xNum4 := 2;
  xNum5 := 1; xNum6 := 2;

  ShowMessage(Min(xNum1, xNum2).ToString);
  ShowMessage(Min(xNum3, xNum4).ToString);
  ShowMessage(Min(xNum5, xNum6).ToString);
end;

procedure TfrmProceduresFunctions.btnTiposDataClick(Sender: TObject);
var
  myDate: TDateTime;
begin
  myDate := EncodeDateTime(2000, 6, 5, 1, 2, 3, 4);

  ShowMessage('               d/m/y = ' +
              FormatDateTime('d/m/y', myDate));

  ShowMessage('               dd/mm/yy = ' +
              FormatDateTime('dd/mm/yy', myDate));

  ShowMessage('ddd d of mmm yyy = ' +
              FormatDateTime('ddd d of mmm yyy', myDate));

  ShowMessage('dddd d of mmmm yyyy = ' +
              FormatDateTime('dddd d of mmmm yyyy', myDate));

  ShowMessage('               ddddd = ' +
              FormatDateTime('ddddd', myDate));

  ShowMessage('               dddddd = ' +
              FormatDateTime('dddddd', myDate));

  ShowMessage('               c = ' +
              FormatDateTime('c', myDate));
end;

end.
