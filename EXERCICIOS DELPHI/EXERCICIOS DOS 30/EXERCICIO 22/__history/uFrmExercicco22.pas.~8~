unit uFrmExercicco22;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Label4: TLabel;
    mmResultadoVenda: TMemo;
    btnCalcular: TButton;
    procedure btnCalcularClick(Sender: TObject);
  private
    procedure CalcularVenda;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

{ TForm1 }

procedure TForm1.btnCalcularClick(Sender: TObject);
begin
  CalcularVenda;
end;

procedure TForm1.CalcularVenda;
var
  xValorCompra, xValorVenda, xDiferenca: Double;
  xQtdProdutos: Integer;
  I: Integer;

begin
  for I := 1 to 4 do
  begin
    xQtdProdutos := 0;
    xDiferenca := 0;
    xValorCompra := StrToFloat(AnsiUpperCase(Inputbox('INFORMAR', 'Informe o Valor de Custo:', '')));
    xValorVenda := StrToFloat(AnsiUpperCase(Inputbox('INFORMAR', 'Informe o Valor de Venda:', '')));

    if (xValorCompra > 0) or (xValorVenda > 0) then
      if xValorVenda < xValorCompra then
        xDiferenca := xValorVenda - xValorCompra;
        inc(xQtdProdutos);
        mmResultadoVenda.Lines.Add('Venda Com Prejuízo!' + 'Valor do prejuizo é:' +
                                    xDiferenca.ToString + '.');
        if xValorCompra < xValorVenda then
          xDiferenca := xValorVenda - xValorCompra;
          inc(xQtdProdutos);
          mmResultadoVenda.Lines.Add('Venda Com Lucro!' + 'Valor do Lucro é:' +
                                    xDiferenca.ToString + '.');

  end;
end;

end.
